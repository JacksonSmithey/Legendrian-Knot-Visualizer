# -*- coding: utf-8 -*-
"""
Created on Wed Nov 13 14:49:14 2024

@author: Jackson
"""
import tkinter as tk
    
    
def getData():
    
    inputList = []
    aiList = []
    
    def on_submit():
        inputList.append(int(dimE.get()))
        inputList.append(int(numA.get()))
        inputList.append(genFAM.get())
        inputList.append(int(numS.get()))
        inputList.append(bool(three_d_P.get()))
        inputList.append(bool(top_P.get()))
        inputList.append(bool(front_P.get()))
        if int(numA.get()) > 0:
            inputList.append(submit_a_values(int(numA.get())))
        elif int(numA.get()) == 0:
            inputList.append([1])
        print('submitted: ', inputList)
        root.destroy()
    
    
    def submit_a_values(numA):
        root2 = tk.Tk()
        root2.geometry("600x500")
        root2.title("Control Variable Declaration")
        match numA:
            case 1:
                tk.Label(root2, text="a{} minimum".format(numA)).grid(row=0, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA)).grid(row=0, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA)).grid(row=0, column=2, padx=15)
                a1_min = tk.Entry(root2)
                a1_increment = tk.Entry(root2)
                a1_max = tk.Entry(root2)
                a1_min.grid(row=1, column=0, padx=15)
                a1_increment.grid(row=1, column=1, padx=15)
                a1_max.grid(row=1, column=2, padx=15)
                a1_min.insert(tk.END, '0')
                a1_increment.insert(tk.END, '1')
                a1_max.insert(tk.END, '1')
                aiList.append((float(a1_min.get()), float(a1_increment.get()), float(a1_max.get())))
            case 2:
                tk.Label(root2, text="a{} minimum".format(numA-1)).grid(row=0, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-1)).grid(row=0, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-1)).grid(row=0, column=2, padx=15)
                a1_min = tk.Entry(root2)
                a1_increment = tk.Entry(root2)
                a1_max = tk.Entry(root2)
                a1_min.grid(row=1, column=0, padx=15)
                a1_increment.grid(row=1, column=1, padx=15)
                a1_max.grid(row=1, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA)).grid(row=2, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA)).grid(row=2, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA)).grid(row=2, column=2, padx=15)
                a2_min = tk.Entry(root2)
                a2_increment = tk.Entry(root2)
                a2_max = tk.Entry(root2)
                a2_min.grid(row=3, column=0, padx=15)
                a2_increment.grid(row=3, column=1, padx=15)
                a2_max.grid(row=3, column=2, padx=15)
                aiList.append((a1_min.get(), a1_increment.get(), a1_max.get()))
                aiList.append((a2_min.get(), a2_increment.get(), a2_max.get()))
            case 3:
                tk.Label(root2, text="a{} minimum".format(numA-2)).grid(row=0, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-2)).grid(row=0, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-2)).grid(row=0, column=2, padx=15)
                a1_min = tk.Entry(root2)
                a1_increment = tk.Entry(root2)
                a1_max = tk.Entry(root2)
                a1_min.grid(row=1, column=0, padx=15)
                a1_increment.grid(row=1, column=1, padx=15)
                a1_max.grid(row=1, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA-1)).grid(row=2, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-1)).grid(row=2, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-1)).grid(row=2, column=2, padx=15)
                a2_min = tk.Entry(root2)
                a2_increment = tk.Entry(root2)
                a2_max = tk.Entry(root2)
                a2_min.grid(row=3, column=0, padx=15)
                a2_increment.grid(row=3, column=1, padx=15)
                a2_max.grid(row=3, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA)).grid(row=4, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA)).grid(row=4, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA)).grid(row=4, column=2, padx=15)
                a3_min = tk.Entry(root2)
                a3_increment = tk.Entry(root2)
                a3_max = tk.Entry(root2)
                a3_min.grid(row=5, column=0, padx=15)
                a3_increment.grid(row=5, column=1, padx=15)
                a3_max.grid(row=5, column=2, padx=15)
                aiList.append((a1_min.get(), a1_increment.get(), a1_max.get()))
                aiList.append((a2_min.get(), a2_increment.get(), a2_max.get()))
                aiList.append((a3_min.get(), a3_increment.get(), a3_max.get()))
            case 4:
                tk.Label(root2, text="a{} minimum".format(numA-3)).grid(row=0, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-3)).grid(row=0, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-3)).grid(row=0, column=2, padx=15)
                a1_min = tk.Entry(root2)
                a1_increment = tk.Entry(root2)
                a1_max = tk.Entry(root2)
                a1_min.grid(row=1, column=0, padx=15)
                a1_increment.grid(row=1, column=1, padx=15)
                a1_max.grid(row=1, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA-2)).grid(row=2, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-2)).grid(row=2, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-2)).grid(row=2, column=2, padx=15)
                a2_min = tk.Entry(root2)
                a2_increment = tk.Entry(root2)
                a2_max = tk.Entry(root2)
                a2_min.grid(row=3, column=0, padx=15)
                a2_increment.grid(row=3, column=1, padx=15)
                a2_max.grid(row=3, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA-1)).grid(row=4, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-1)).grid(row=4, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-1)).grid(row=4, column=2, padx=15)
                a3_min = tk.Entry(root2)
                a3_increment = tk.Entry(root2)
                a3_max = tk.Entry(root2)
                a3_min.grid(row=5, column=0, padx=15)
                a3_increment.grid(row=5, column=1, padx=15)
                a3_max.grid(row=5, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA)).grid(row=6, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA)).grid(row=6, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA)).grid(row=6, column=2, padx=15)
                a4_min = tk.Entry(root2)
                a4_increment = tk.Entry(root2)
                a4_max = tk.Entry(root2)
                a4_min.grid(row=7, column=0, padx=15)
                a4_increment.grid(row=7, column=1, padx=15)
                a4_max.grid(row=7, column=2, padx=15)
                aiList.append((a1_min.get(), a1_increment.get(), a1_max.get()))
                aiList.append((a2_min.get(), a2_increment.get(), a2_max.get()))
                aiList.append((a3_min.get(), a3_increment.get(), a3_max.get()))
                aiList.append((a4_min.get(), a4_increment.get(), a4_max.get()))
            case 5:
                tk.Label(root2, text="a{} minimum".format(numA-4)).grid(row=0, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-4)).grid(row=0, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-4)).grid(row=0, column=2, padx=15)
                a1_min = tk.Entry(root2)
                a1_increment = tk.Entry(root2)
                a1_max = tk.Entry(root2)
                a1_min.grid(row=1, column=0, padx=15)
                a1_increment.grid(row=1, column=1, padx=15)
                a1_max.grid(row=1, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA-3)).grid(row=2, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-3)).grid(row=2, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-3)).grid(row=2, column=2, padx=15)
                a2_min = tk.Entry(root2)
                a2_increment = tk.Entry(root2)
                a2_max = tk.Entry(root2)
                a2_min.grid(row=3, column=0, padx=15)
                a2_increment.grid(row=3, column=1, padx=15)
                a2_max.grid(row=3, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA-2)).grid(row=4, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-2)).grid(row=4, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-2)).grid(row=4, column=2, padx=15)
                a3_min = tk.Entry(root2)
                a3_increment = tk.Entry(root2)
                a3_max = tk.Entry(root2)
                a3_min.grid(row=5, column=0, padx=15)
                a3_increment.grid(row=5, column=1, padx=15)
                a3_max.grid(row=5, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA-1)).grid(row=6, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA-1)).grid(row=6, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA-1)).grid(row=6, column=2, padx=15)
                a4_min = tk.Entry(root2)
                a4_increment = tk.Entry(root2)
                a4_max = tk.Entry(root2)
                a4_min.grid(row=7, column=0, padx=15)
                a4_increment.grid(row=7, column=1, padx=15)
                a4_max.grid(row=7, column=2, padx=15)
                tk.Label(root2, text="a{} minimum".format(numA)).grid(row=8, column=0, padx=15)
                tk.Label(root2, text="a{} increment".format(numA)).grid(row=8, column=1, padx=15)
                tk.Label(root2, text="a{} maximum".format(numA)).grid(row=8, column=2, padx=15)
                a5_min = tk.Entry(root2)
                a5_increment = tk.Entry(root2)
                a5_max = tk.Entry(root2)
                a5_min.grid(row=9, column=0, padx=15)
                a5_increment.grid(row=9, column=1, padx=15)
                a5_max.grid(row=9, column=2, padx=15)
                aiList.append((a1_min.get(), a1_increment.get(), a1_max.get()))
                aiList.append((a2_min.get(), a2_increment.get(), a2_max.get()))
                aiList.append((a3_min.get(), a3_increment.get(), a3_max.get()))
                aiList.append((a4_min.get(), a4_increment.get(), a4_max.get()))
                aiList.append((a5_min.get(), a5_increment.get(), a5_max.get()))
        submit_button = tk.Button(root, text="Submit") #TODO:create command containing ai.append and root2 loop
        submit_button.grid(row=7, columnspan=2, pady=10)
        root2.mainloop()
        return aiList

    root = tk.Tk()
    root.geometry("600x500")
    root.title("Legendrian Knot Visualizer")
    
    tk.Label(root, text="Dimension of E:").grid(row=0, column=0, padx=15)
    dimE = tk.Entry(root)
    dimE.grid(row=0, column=1, padx=15)
    dimE.insert(tk.END, '1')
    
    tk.Label(root, text="Number of control variables:").grid(row=1, column=0, padx=15)
    numA = tk.Entry(root)
    numA.grid(row=1, column=1, padx=15)
    numA.insert(tk.END, '1')
    
    tk.Label(root, text="Genfam:").grid(row=2, column=0, padx=15)
    genFAM = tk.Entry(root)
    genFAM.grid(row=2, column=1, padx=15)
    genFAM.insert(tk.END, '(a1-x**2)*e1 - e1**3')
    
    tk.Label(root, text="Number of subfunctions:").grid(row=3, column=0, padx=15)
    numS = tk.Entry(root)
    numS.grid(row=3, column=1, padx=15)
    numS.insert(tk.END, '0')
    
    three_d_P = tk.BooleanVar(value='True')
    threeDProj = tk.Checkbutton(root, text='3D Plot', variable=three_d_P)
    threeDProj.grid(row=4, columnspan=2, padx=30)
    top_P = tk.BooleanVar(value='True')
    topProj = tk.Checkbutton(root, text='Top Projection', variable=top_P)
    topProj.grid(row=5, columnspan=2, padx=30)
    front_P = tk.BooleanVar(value='True')
    frontProj = tk.Checkbutton(root, text='Front Projection', variable=front_P)
    frontProj.grid(row=6, columnspan=2, padx=30)

    submit_button = tk.Button(root, text="Submit", command=on_submit)
    submit_button.grid(row=7, columnspan=2, pady=10)
    root.mainloop()
    return inputList
    
    

    